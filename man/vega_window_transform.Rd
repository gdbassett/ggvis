% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vega_refs_transform_window.R
\name{vega_window_transform}
\alias{vega_window_transform}
\title{create a vega window transform object}
\usage{
vega_window_transform(type, sort = NULL, groupby = NULL, ops = NULL,
  fields = NULL, params = NULL, as = NULL, frame = NULL,
  ignorePeers = NULL)
}
\arguments{
\item{type}{All transforms require a type property, specifying the name of the transform.}

\item{sort}{Compare A comparator definition for sorting data objects within a window. If two data objects are considered equal by the comparator, they are considered "peer" values of equal rank. If _sort_ is not specified, the order is undefined: data objects are processed in the order they are observed and none are considered peers (the _ignorePeers_ parameter is ignored and treated as if set to `true`).}

\item{groupby}{Field[] The data fields to by which to partition data objects into separate windows. If not specified, a single group containing all data objects will be used.}

\item{ops}{String[] The window or aggregation operations to apply within a window, including `rank`, `lead`, `sum`, `average` or `count`. See the [window operation reference](#ops) for more.}

\item{fields}{Field[] The data fields for which to compute aggregate or window functions. This array should align with the _ops_, _as_, and _params_ arrays. Field values can be `null` for operations that do not operate over a specific data field, including `count`, `rank`, and `dense_rank`.}

\item{params}{Array Parameter values for window functions. This array should align with the _ops_ array. Parameter values can be `null` for operations that do not accept a parameter (such as aggregation operations).}

\item{as}{String[] The output field names to use for each operation in _ops_. If not specified, names will be automatically generated based on the operation and field names (e.g., `rank`, `sum_field`, `average_field`).}

\item{frame}{Number[] A frame specification as a two-element array indicating how the sliding window should proceed. The array entries should either be a number indicating the offset from the current data object, or `null` to indicate unbounded rows preceding or following the current data object. The default value is `[null, 0]`, indicating that the sliding window includes the current object and all preceding objects. The value `[-5, 5]` indicates that the window should include five objects preceding and five objects following the current object. Finally, `[null, null]` indicates that the window frame should always include all data objects.}

\item{ignorePeers}{Boolean Indicates if the sliding window frame should ignore peer values. (Peer values are those considered identical by the _sort_ criteria). The default is `false`, causing the window frame to expand to include all peer values. If set to `true`, the window frame will be defined by offset values only. This setting only affects those operations that depend on the window frame, namely aggregation operations and the *first_value*, *last_value*, and *nth_value* window operations.}
}
\value{
a transform object
}
\description{
https://vega.github.io/vega/docs/transforms/window/index.html
}
\details{
The **window** transform performs calculations over sorted groups of data objects. These calculations including ranking, lead/lag analysis, and aggregates such as running sums and averages. Calculated values are written back to the input data stream.
}
