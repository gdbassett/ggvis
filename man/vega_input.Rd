% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vega_refs_signal.R
\name{vega_input}
\alias{vega_input}
\title{return a vega input binding object}
\usage{
vega_input(input, element = NULL, options = NULL, max = NULL,
  min = NULL, step = NULL, debounce = NULL, ...)
}
\arguments{
\item{input}{String Required. The type of input element to use. The valid values are checkbox, radio, range, select, and any other legal HTML form input type.}

\item{element}{String An optional CSS selector string indicating the parent element to which the input element should be added. By default, all input elements are added within the parent container of the Vega view.}

\item{options}{Array Required for radio and select inputs. An array of options to select from.}

\item{max}{Number For range inputs, sets the maximum slider value. Defaults to the larger of the signal value and 100.}

\item{min}{Number For range inputs, sets the minimum slider value. Defaults to the smaller of the signal value and 0.}

\item{step}{Number For range inputs, sets the minimum slider increment. If undefined, the step size will be automatically determined based on the min and max values.}

\item{debounce}{Number If defined, delays event handling until the specified milliseconds have elapsed since the last event was fired.}

\item{...}{Extra properties defined (e.g., placeholder for "text" input) will be added as attributes of the generated HTML form element.}
}
\value{
a vega input object
}
\description{
The bind property binds a signal to an input element defined outside of the visualization. Vega will generate new HTML form elements and set up a two-way binding: changes to the input element will update the signal, and vice versa. Vega includes dedicate support for checkbox (single boolean value), radio (group of radio buttons), select (drop-down menu), and range (slider) input types.
}
\section{Radio and Select Input Properties}{


\tabular{rrl}{
Property \tab Type \tab Description\cr
options \tab Array \tab Required. An array of options to select from.\cr
debounce \tab Number \tab If defined, delays event handling until the specified milliseconds have elapsed since the last event was fired.\cr
}
}

\section{Range Input Properties}{


\tabular{rrl}{
Property \tab Type \tab Description\cr
max \tab Number \tab For range inputs, sets the maximum slider value. Defaults to the larger of the signal value and 100.\cr
min \tab Number \tab For range inputs, sets the minimum slider value. Defaults to the smaller of the signal value and 0.\cr
step \tab Number \tab For range inputs, sets the minimum slider increment. If undefined, the step size will be automatically determined based on the min and max values.\cr
debounce \tab Number \tab If defined, delays event handling until the specified milliseconds have elapsed since the last event was fired.\cr
}
}

\section{Other Input Types}{


In addition, any valid HTML input type may be used as the value of the type property. Examples include "text" (for single-line text entry), "color" (for a color picker), and "date" (for entering year, month and day). In these cases, any extra properties defined (e.g., placeholder for "text" input) will be added as attributes of the generated HTML form element.
}

