% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vega_refs_transform_voronoi.R
\name{vega_voronoi_transform}
\alias{vega_voronoi_transform}
\title{create a vega voronoi transform object}
\usage{
vega_voronoi_transform(type, x = NULL, y = NULL, extent = NULL,
  size = NULL, as = NULL)
}
\arguments{
\item{type}{All transforms require a type property, specifying the name of the transform.}

\item{x}{Field The data field for point x-coordinates.}

\item{y}{Field The data field for point y-coordinates.}

\item{extent}{Array[] The clip extent of the Voronoi cells. The extent bounds are specified as an array `[[x0, y0], [x1, y1]]`, where x0 is the left side of the extent, y0 is the top, x1 is the right and y1 is the bottom. For example, `[[-1e5, -1e5], [1e5, 1e5]]` will clip the voronoi diagram at 10,000 pixels in both the negative and positive directions.}

\item{size}{Number[] An alternative to `extent` that sets the clip extent to `[[0,0], size]`.}

\item{as}{String[] The output field for the Voronoi cell SVG path string. The default is `path`.}
}
\value{
a transform object
}
\description{
https://vega.github.io/vega/docs/transforms/voronoi/index.html
NOTE: Some parameters are required to be 'arrays'.  In the case where a parameter must be an array but is a single line, wrap it in 'I()', (asis), to ensure it is properly handled.
}
\details{
The **voronoi** transform computes a [voronoi diagram](https://en.wikipedia.org/wiki/Voronoi_diagram) for a set of input points and returns the computed cell paths. The Voronoi cells can then be used to identify the nearest point for a given value. For example, a Voronoi diagram can be used to automatically select the data point closest to the mouse cursor.
}
