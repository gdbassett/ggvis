% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vega_refs_transform_crossfilter.R
\name{vega_crossfilter_transform}
\alias{vega_crossfilter_transform}
\title{create a vega crossfilter transform object}
\usage{
vega_crossfilter_transform(type, fields = NULL, queries = NULL,
  signal = NULL)
}
\arguments{
\item{type}{All transforms require a type property, specifying the name of the transform.}

\item{fields}{Field[] (required) An array of data fields to filter. The same field may be included more than once to specify multiple queries.}

\item{queries}{Array[] (required) An array of per-field range queries. Each entry must resolve to a two-element number array, indicating the minimum (inclusive) and maximum (exclusive) values that should pass through the filter.}

\item{signal}{String If defined, binds the computed filter mask to a signal with the given name.}
}
\value{
a transform object
}
\description{
https://vega.github.io/vega/docs/transforms/crossfilter/index.html
NOTE: Some parameters are required to be 'arrays'.  In the case where a parameter must be an array but is a single line, wrap it in 'I()', (asis), to ensure it is properly handled.
}
\details{
The **crossfilter** transform maintains a filter mask for multiple dimensional queries, using a set of sorted indices. This transform can be used in conjunction with the [resolvefilter](../resolvefilter) transform to enable fast interactive querying over large data sets. This transform is inspired by the [Crossfilter library](http://crossfilter.github.io/crossfilter/) developed by Mike Bostock and collaborators.
}
