% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vega_refs_transform_joinaggregate.R
\name{vega_joinaggregate_transform}
\alias{vega_joinaggregate_transform}
\title{create a vega joinaggregate transform object}
\usage{
vega_joinaggregate_transform(type, groupby = NULL, fields = NULL,
  ops = NULL, as = NULL)
}
\arguments{
\item{type}{All transforms require a type property, specifying the name of the transform.}

\item{groupby}{Field[] The data fields to group by. If not specified, a single group containing all data objects will be used.}

\item{fields}{Field[] The data fields for which to compute aggregate functions. This array should align with the _ops_ and _as_ arrays. If no _fields_ and _ops_ are specified, a `count` aggregation will be used by default.}

\item{ops}{String[] The aggregation operations to apply to the _fields_, such as `sum`, `average` or `count`. See the [aggregate operation reference](#ops) for more.}

\item{as}{String[] The output field names to use for each aggregated field in _fields_. If not specified, names will be automatically generated based on the operation and field names (e.g., `sum_field`, `average_field`).}
}
\value{
a transform object
}
\description{
https://vega.github.io/vega/docs/transforms/joinaggregate/index.html
NOTE: Some parameters are required to be 'arrays'.  In the case where a parameter must be an array but is a single line, wrap it in 'I()', (asis), to ensure it is properly handled.
}
\details{
The **joinaggregate** transform extends the input data objects with aggregate values. Aggregation is performed and the results are then joined with the input data. The parameters for this transform are nearly identical to the [`aggregate`](../aggregate) transform, but rather than creating new output objects, the results are written back to each of the input data objects. This transform can be helpful for creating derived values that combine both raw data and aggregate calculations, such as percentages of group totals.
}
