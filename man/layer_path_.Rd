% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layer_line2.R
\name{layer_path_}
\alias{layer_path_}
\title{Generate a path chart}
\usage{
layer_path_(vis, ..., from = NULL, stack = TRUE, arrange = NULL,
  id = NULL)
}
\arguments{
\item{vis}{Visualisation to modify}

\item{...}{Arguments passed on to \code{vega_mark}
\describe{
  \item{type}{String Required. The graphical mark type. Must be one of the supported
mark types.}
  \item{clip}{Boolean Indicates if the marks should be clipped to the enclosing group’s
width and height (default false).}
  \item{description}{String An optional description of this mark. Can be used as a
comment.}
  \item{encode}{Encode An object containing a set of visual encoding rules for mark
properties.}
  \item{from}{From An object describing the data this mark set should visualize. If
undefined, a single element data set containing an empty object is assumed. The from
property can either specify a data set to use (e.g., {"data": "table"}) or provide a
faceting directive to subdivide a data set across a set of group marks.}
  \item{interactive}{Boolean A boolean flag (default true) indicating if the marks can
serve as input event sources. If false, no mouse or touch events corresponding to
the marks will be generated.}
  \item{key}{Field A data field to use as a unique key for data binding. When a
visualization’s data is updated, the key value will be used to match data elements
to existing mark instances. Use a key field to enable object constancy for
transitions over dynamic data.}
  \item{name}{String A unique name for the mark. This name can be used to refer to these
marks within an event stream definition. SVG renderers will add this name value as a
CSS class name on the enclosing SVG group (g) element containing the mark instances.}
  \item{on}{Trigger[] A set of triggers for modifying mark properties in response to
signal changes.}
  \item{sort}{Compare A comparator for sorting mark items. The sort order will determine
the default rendering order. The comparator is defined over generated scenegraph
items and sorting is performed after encodings are computed, allowing items to be
sorted by size or position. To sort by underlying data properties in addition to
mark item properties, append the prefix datum. to a field name
(e.g., {"field": "datum.field"}).}
  \item{transform}{Transform[] A set of post-encoding transforms, applied after any
encode blocks, that operate directly on mark scenegraph items (not backing data
objects). These can be useful for performing layout with transforms that can set x,
y, width, height, etc. properties. Only data transforms that do not generate or
filter data objects may be used.}
  \item{role}{String A metadata string indicating the role of the mark. SVG renderers
will add this role value (prepended with the prefix role-) as a CSS class name on
the enclosing SVG group (g) element containing the mark instances. Roles are used
internally by Vega to guide layout. Do not set this property unless you know which
layout effect you are trying to achieve.}
  \item{style}{String String[] A string or array of strings indicating the name of
custom styles to apply to the mark. A style is a named collection of mark property
defaults defined within the configuration. These properties will be applied to the
mark’s enter encoding set, with later styles overriding earlier styles. Any
properties explicitly defined within the mark’s encode block will override a style
default.}
  \item{scales}{a scales object for group_mark marks}
}}

\item{from}{The data or other source to use for this figure. May be a dataframe or a name.}

\item{stack}{If there are multiple bars to be drawn at an x location, should
the bars be stacked? If FALSE, the bars will be overplotted on each other.}

\item{arrange}{Default NULL.  Boolean or other 'sort' input. Setting 'TRUE' creates line layer}

\item{id}{A string to append to names created within this layer, (for example
data or transform fields)}
}
\description{
Generate a path chart
}
