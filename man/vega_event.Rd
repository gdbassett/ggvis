% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vega_refs_signal.R
\name{vega_event}
\alias{vega_event}
\title{return a vega event handler binding}
\usage{
vega_event(events, update = NULL, encode = NULL, force = FALSE)
}
\arguments{
\item{events}{EventStream Required. The events to respond to.}

\item{update}{Expression An expression that is evaluated when events occur, the result then becomes the new signal value. This property is required if encode is not specified.}

\item{encode}{String The name of a mark property encoding set to re-evaluate for the the mark item that was the source of the input event. This property is required if update is not specified.}

\item{force}{Boolean A boolean flag (default false) indicating whether or not updates that do not change the signal value should propagate. For example, if set to true and an input stream update sets the signal to its current value, downstream signals will still be notified of an update.}
}
\value{
a vega event object
}
\description{
An event handler object includes an event stream definition indicating which events to respond to, and either an update expression for setting a new signal value, or an encode set for updating the mark being interacted with.
}
\details{
This signal definition increments its value upon mouseover of rect items:

{
  "name": "count",
  "value": 0,
  "on": [
    {"events": "rect:mouseover", "update": "count + 1"}
  ]
}
This signal definition invokes a custom encoding set upon mousedown and mouseup on mark items. The mark definition must include properties named "select" and "release" under the mark "encode" property.

{
  "name": "clickEncode",
  "on": [
    {"events": "*:mousedown", "encode": "select"},
    {"events": "*:mouseup", "encode": "release"}
  ]
}
}
